{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */// Import dependencies, declarations and components\nimport{useContext,useEffect,useState}from'react';import{Checkbox}from'antd';import{TaskContext}from'../../TaskContext';import{saveTask}from'../../data/api';/**\n * Renders task subtasks for task preview with interactive checkbox\n * indicating and updating the subtasks' completion status.\n * @param {JSON} subtasks - an object representing the subtasks to be displayed\n * @returns {JSX.Element} - The rendered subtasks\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Subtasks(_ref){let{subtasks,taskID}=_ref;// Import global context & local state\nconst{setTasks,tasks}=useContext(TaskContext);const[save,setSave]=useState(false);/**\n     * A function to update a subtasks completion status in the global context\n     * and on the Pixel API upon change\n     */const onChange=async(event,subtask)=>{// Update subtasks' local state\nlet completed=Number(event.target.checked);// Update global context\nsetTasks(_tasks=>{return _tasks.map(task=>{if(task.taskID===taskID){const updatedTask={...task,subtasks:task.subtasks.map(sub=>sub.subtaskID===subtask.subtaskID?{...sub,completed}:sub)};return updatedTask;}return task;});});setSave(true);};// Update subtask completion status on API\nuseEffect(()=>{const update=async()=>{await saveTask(tasks.find(task=>task.taskID===taskID));};if(save){update();setSave(false);}},[save]);return/*#__PURE__*/_jsx(\"div\",{className:\"mb-md mt-base\",children:subtasks&&subtasks.map(sub=>{var _tasks$find,_tasks$find$subtasks$,_tasks$find$subtasks$2,_tasks$find2,_tasks$find2$subtasks;return/*#__PURE__*/_jsxs(\"div\",{className:`flex items-start ${(_tasks$find=tasks.find(task=>task.taskID===taskID))!==null&&_tasks$find!==void 0&&(_tasks$find$subtasks$=_tasks$find.subtasks.find(subtask=>subtask.subtaskID===sub.subtaskID))!==null&&_tasks$find$subtasks$!==void 0&&_tasks$find$subtasks$.completed?\"opacity-50\":\"opacity-100\"}`,children:[/*#__PURE__*/_jsx(Checkbox,{className:\"mr-base border-accent\",checked:(_tasks$find$subtasks$2=(_tasks$find2=tasks.find(task=>task.taskID===taskID))===null||_tasks$find2===void 0?void 0:(_tasks$find2$subtasks=_tasks$find2.subtasks.find(subtask=>subtask.subtaskID===sub.subtaskID))===null||_tasks$find2$subtasks===void 0?void 0:_tasks$find2$subtasks.completed)!==null&&_tasks$find$subtasks$2!==void 0?_tasks$find$subtasks$2:false,onChange:event=>onChange(event,sub)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-left text-text text-sm font-medium pl-xs\",children:sub.subtask})]},sub.subtaskID);})});};export default Subtasks;","map":{"version":3,"names":["useContext","useEffect","useState","Checkbox","TaskContext","saveTask","jsx","_jsx","jsxs","_jsxs","Subtasks","_ref","subtasks","taskID","setTasks","tasks","save","setSave","onChange","event","subtask","completed","Number","target","checked","_tasks","map","task","updatedTask","sub","subtaskID","update","find","className","children","_tasks$find","_tasks$find$subtasks$","_tasks$find$subtasks$2","_tasks$find2","_tasks$find2$subtasks"],"sources":["/Users/jasmineburt/Documents/projects/projects/pixel/src/components/TaskPreview/Subtasks.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n// Import dependencies, declarations and components\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Checkbox } from 'antd';\nimport { TaskContext } from '../../TaskContext';\nimport { saveTask } from '../../data/api';\n\n/**\n * Renders task subtasks for task preview with interactive checkbox\n * indicating and updating the subtasks' completion status.\n * @param {JSON} subtasks - an object representing the subtasks to be displayed\n * @returns {JSX.Element} - The rendered subtasks\n */\nfunction Subtasks ({ subtasks, taskID }) {\n\n    // Import global context & local state\n\n    const { setTasks, tasks } = useContext(TaskContext);\n    const [save, setSave] = useState(false);\n\n    /**\n     * A function to update a subtasks completion status in the global context\n     * and on the Pixel API upon change\n     */\n    const onChange = async (event, subtask) => {\n        // Update subtasks' local state\n        let completed = Number(event.target.checked);\n\n        // Update global context\n        setTasks((_tasks) => {\n            return _tasks.map((task) => {\n              if (task.taskID === taskID) {\n                const updatedTask = {\n                  ...task,\n                  subtasks: task.subtasks.map((sub) => \n                    sub.subtaskID === subtask.subtaskID ? { ...sub, completed } : sub\n                  ),\n                };\n                return updatedTask;\n              }\n              return task;\n            });\n          });\n          setSave(true);\n          \n    };\n    \n    // Update subtask completion status on API\n    useEffect(() => {\n        const update = async () => {\n            await saveTask(tasks.find((task) => task.taskID === taskID));\n        };\n        if (save) {\n            update();\n            setSave(false);\n        }\n    }, [save])\n\n    return (\n        <div className=\"mb-md mt-base\">\n            {subtasks && subtasks.map((sub) => (\n                <div\n                    key={sub.subtaskID}\n                    className={`flex items-start ${tasks\n                        .find((task) => task.taskID === taskID)\n                        ?.subtasks.find((subtask) => subtask.subtaskID === sub.subtaskID)\n                        ?.completed\n                            ? \"opacity-50\" : \"opacity-100\"}`}\n                    >\n                    <Checkbox\n                        className=\"mr-base border-accent\"\n                        checked={tasks\n                            .find((task) => task.taskID === taskID)\n                            ?.subtasks.find((subtask) => subtask.subtaskID === sub.subtaskID)\n                            ?.completed ?? false}\n                        onChange={(event) => onChange(event, sub)}\n                    />\n                    <div className=\"text-left text-text text-sm font-medium pl-xs\">{sub.subtask}</div>\n                </div>\n            ))}\n        </div>\n    );\n};\nexport default Subtasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}