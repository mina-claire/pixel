{"ast":null,"code":"// Import dependencies and declarations\nimport{useEffect,useState,useContext}from'react';import{TaskContext}from'../TaskContext';import{useNavigate}from'react-router-dom';import{GoogleLogin}from'@react-oauth/google';import{Spin}from'antd';import{requestLogin}from'../data/api';import logo from'../components/images/logo.svg';/**\n * Pixel Login Page Component\n * Allows user to login/create their pixel account.\n * \n * @route /login\n * @description Page allows user to login and create a Pixel account via\n * Google OAuth. Upon verification, login page redirects to user Dashboard.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){// Import global context & routes\nconst{setUser,loading}=useContext(TaskContext);const navigate=useNavigate();// Initialise local states\nconst[signIn,setSignIn]=useState(false);/**\n   * Redirect user to dashboard upon email authentication\n   * Set fetched data to global user context\n   */useEffect(()=>{if(!loading){navigate('/dashboard');}},[loading,navigate]);/**\n   * Authenticate user login request, and retrive or initialise user data\n   * @param {json} response \n   */const handleLogin=async response=>{setSignIn(true);const userData=await requestLogin(response);setUser(userData);};return/*#__PURE__*/_jsx(\"div\",{className:\"h-[100vh] w-[100vw] flex items-center justify-center overflow-hidden\",children:!signIn?/*#__PURE__*/_jsxs(\"div\",{className:\"w-[27rem] transform -translate-y-[5rem]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"img\",{className:\"mb-lg w-logo\",src:logo,alt:\"Logo\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-h1 text-md font-heavy cursor-default\",children:\"Piece by piece, task by task\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-text opacity-50 text-md font-base cursor-default\",children:\"Login to your Pixel account...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-lg mb-md\",children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleLogin,useOneTap:false,ux_mode:\"popup\",size:\"large\",text:\"signin_with\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-text opacity-80 text-end text-sm font-medium underline hover:cursor-pointer hover:opacity-100\",children:\"terms & conditions \\uD83C\\uDF80\"})]}):/*#__PURE__*/_jsx(Spin,{size:\"large\"})// Render spinner during Google authentication\n});}export default Login;","map":{"version":3,"names":["useEffect","useState","useContext","TaskContext","useNavigate","GoogleLogin","Spin","requestLogin","logo","jsx","_jsx","jsxs","_jsxs","Login","setUser","loading","navigate","signIn","setSignIn","handleLogin","response","userData","className","children","src","alt","onSuccess","useOneTap","ux_mode","size","text"],"sources":["/Users/jasmineburt/Documents/projects/projects/pixel/src/pages/Login.js"],"sourcesContent":["// Import dependencies and declarations\n\nimport { useEffect, useState, useContext } from 'react';\nimport { TaskContext } from '../TaskContext'\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { Spin } from 'antd';\nimport { requestLogin } from '../data/api';\nimport logo from '../components/images/logo.svg'\n\n/**\n * Pixel Login Page Component\n * Allows user to login/create their pixel account.\n * \n * @route /login\n * @description Page allows user to login and create a Pixel account via\n * Google OAuth. Upon verification, login page redirects to user Dashboard.\n */\nfunction Login() {\n\n  // Import global context & routes\n  const { setUser, loading } = useContext(TaskContext);\n  const navigate = useNavigate();\n\n  // Initialise local states\n  const [signIn, setSignIn] = useState(false);\n\n  /**\n   * Redirect user to dashboard upon email authentication\n   * Set fetched data to global user context\n   */\n  useEffect(() => {\n    if (!loading) {\n      navigate('/dashboard');\n    }\n  }, [loading, navigate]);\n\n  /**\n   * Authenticate user login request, and retrive or initialise user data\n   * @param {json} response \n   */\n  const handleLogin = async (response) => {\n    setSignIn(true);\n    const userData = await requestLogin(response);\n    setUser(userData);\n  };\n\n  return (\n    <div className=\"h-[100vh] w-[100vw] flex items-center justify-center overflow-hidden\">\n      {!signIn ? (\n        <div className=\"w-[27rem] transform -translate-y-[5rem]\">\n\n          {/** Render pixel logo & slogan */}\n          <div className=\"flex justify-center items-center\">\n            <img\n              className=\"mb-lg w-logo\"\n              src={logo}\n              alt=\"Logo\"\n            />\n          </div>\n          <p className=\"text-h1 text-md font-heavy cursor-default\">\n            Piece by piece, task by task\n          </p>\n          <p className=\"text-text opacity-50 text-md font-base cursor-default\">\n            Login to your Pixel account...\n          </p>\n\n          {/** Render Google OAUTH login button */}\n          <div className=\"mt-lg mb-md\">\n            <GoogleLogin\n              onSuccess={handleLogin}\n              useOneTap={false}\n              ux_mode=\"popup\"\n              size=\"large\"\n              text=\"signin_with\"\n          />\n          </div>\n\n          {/** Display link for Pixel's T&Cs */}\n          <p className=\"text-text opacity-80 text-end text-sm font-medium underline\n                        hover:cursor-pointer hover:opacity-100\">\n              terms & conditions ðŸŽ€\n          </p>\n        </div>\n      ) : (\n        <Spin size=\"large\" /> // Render spinner during Google authentication\n      )}\n    </div>\n  );\n}\nexport default Login;"],"mappings":"AAAA;AAEA,OAASA,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACvD,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,IAAI,KAAQ,MAAM,CAC3B,OAASC,YAAY,KAAQ,aAAa,CAC1C,MAAO,CAAAC,IAAI,KAAM,+BAA+B,CAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAPA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQA,QAAS,CAAAC,KAAKA,CAAA,CAAG,CAEf;AACA,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGb,UAAU,CAACC,WAAW,CAAC,CACpD,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAE3C;AACF;AACA;AACA,KACED,SAAS,CAAC,IAAM,CACd,GAAI,CAACe,OAAO,CAAE,CACZC,QAAQ,CAAC,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,CAACD,OAAO,CAAEC,QAAQ,CAAC,CAAC,CAEvB;AACF;AACA;AACA,KACE,KAAM,CAAAG,WAAW,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACtCF,SAAS,CAAC,IAAI,CAAC,CACf,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAd,YAAY,CAACa,QAAQ,CAAC,CAC7CN,OAAO,CAACO,QAAQ,CAAC,CACnB,CAAC,CAED,mBACEX,IAAA,QAAKY,SAAS,CAAC,sEAAsE,CAAAC,QAAA,CAClF,CAACN,MAAM,cACNL,KAAA,QAAKU,SAAS,CAAC,yCAAyC,CAAAC,QAAA,eAGtDb,IAAA,QAAKY,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAC/Cb,IAAA,QACEY,SAAS,CAAC,cAAc,CACxBE,GAAG,CAAEhB,IAAK,CACViB,GAAG,CAAC,MAAM,CACX,CAAC,CACC,CAAC,cACNf,IAAA,MAAGY,SAAS,CAAC,2CAA2C,CAAAC,QAAA,CAAC,8BAEzD,CAAG,CAAC,cACJb,IAAA,MAAGY,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAAC,gCAErE,CAAG,CAAC,cAGJb,IAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1Bb,IAAA,CAACL,WAAW,EACVqB,SAAS,CAAEP,WAAY,CACvBQ,SAAS,CAAE,KAAM,CACjBC,OAAO,CAAC,OAAO,CACfC,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,aAAa,CACrB,CAAC,CACG,CAAC,cAGNpB,IAAA,MAAGY,SAAS,CAAC,oGACwC,CAAAC,QAAA,CAAC,iCAEtD,CAAG,CAAC,EACD,CAAC,cAENb,IAAA,CAACJ,IAAI,EAACuB,IAAI,CAAC,OAAO,CAAE,CAAE;AACvB,CACE,CAAC,CAEV,CACA,cAAe,CAAAhB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}