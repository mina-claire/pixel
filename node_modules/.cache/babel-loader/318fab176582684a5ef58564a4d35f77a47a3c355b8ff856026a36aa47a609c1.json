{"ast":null,"code":"// Import dependencies, declarations and components\nimport{useState}from'react';import TaskList from'./TaskList';import ArchivedList from'./ArchivedList';import{Collection,ArrowBarLeft,ArrowBarRight}from'react-bootstrap-icons';/**\n * Pixel sidebar component that can be opened and closed\n * On open, the sidebar displays archived or current tasks based on the\n * selected option.\n * @returns {JSX.Element} - The rendered sidebar component.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Sidebar(){// Initialise local states\nconst[open,setOpen]=useState(false);const[content,setContent]=useState(\"list\");// Open, close and render set sidebar content\nconst renderContent=event=>{if(content===event){setOpen(!open);}else{setContent(event);if(!open){setOpen(true);}};};// Sidebar content options\nconst opt={list:/*#__PURE__*/_jsx(TaskList,{}),archive:/*#__PURE__*/_jsx(ArchivedList,{})};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row shadow-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-screen border-2 p-base text-accent bg-bg z-50\",children:[open?/*#__PURE__*/_jsx(ArrowBarLeft,{title:\"close\",className:\"sidebar-icon\",onClick:()=>setOpen(!open)}):/*#__PURE__*/_jsx(ArrowBarRight,{title:\"open\",className:\"sidebar-icon\",onClick:()=>setOpen(!open)}),/*#__PURE__*/_jsx(Collection,{title:\"master task list ðŸ§ \",onClick:()=>renderContent(\"list\"),className:\"sidebar-icon\"})]}),/*#__PURE__*/_jsx(\"div\",{className:`bg-bg h-screen relative transition-all ease-in-out duration-500\n            ${open?\"translate-x-0 w-sidebar\":\"-translate-x-[18rem] w-0\"}`,children:opt[content]})]});};export default Sidebar;","map":{"version":3,"names":["useState","TaskList","ArchivedList","Collection","ArrowBarLeft","ArrowBarRight","jsx","_jsx","jsxs","_jsxs","Sidebar","open","setOpen","content","setContent","renderContent","event","opt","list","archive","className","children","title","onClick"],"sources":["/Users/jasmineburt/Documents/projects/projects/pixel/src/components/Sidebar/Sidebar.js"],"sourcesContent":["// Import dependencies, declarations and components\n\nimport { useState } from 'react';\nimport TaskList from './TaskList';\nimport ArchivedList from './ArchivedList';\nimport { \n  Collection,\n  ArrowBarLeft,\n  ArrowBarRight,\n  } \n  from 'react-bootstrap-icons';\n\n/**\n * Pixel sidebar component that can be opened and closed\n * On open, the sidebar displays archived or current tasks based on the\n * selected option.\n * @returns {JSX.Element} - The rendered sidebar component.\n */\nfunction Sidebar () {\n\n  // Initialise local states\n  const [open, setOpen] = useState(false);\n  const [content, setContent] = useState(\"list\");\n\n  // Open, close and render set sidebar content\n  const renderContent = (event) => {\n    if (content === event) {\n      setOpen(!open);\n    } else {\n      setContent(event);\n      if (!open) {\n        setOpen(true);\n      }\n    };\n  }\n\n  // Sidebar content options\n  const opt = {\n    list:  <TaskList />,\n    archive: <ArchivedList />,\n  };\n    \n  return (\n    <div className=\"flex flex-row shadow-sidebar\">\n      <div className=\"flex flex-col h-screen border-2 p-base\n            text-accent bg-bg z-50\">\n\n        {/** Render open/close icon based on open state */}\n        {open ? (\n          <ArrowBarLeft\n            title={\"close\"}\n            className=\"sidebar-icon\"\n            onClick={() => setOpen(!open)} \n          />\n        ) : (\n          <ArrowBarRight\n            title={\"open\"}\n            className=\"sidebar-icon\"\n            onClick={() => setOpen(!open)} \n          />\n        )}\n\n        {/** Render master list button */}\n        <Collection\n          title={\"master task list ðŸ§ \"}\n          onClick={() => renderContent(\"list\")}\n          className=\"sidebar-icon\"\n        />\n      </div>\n\n      {/** Render sidebar content */}\n      <div className={`bg-bg h-screen relative transition-all ease-in-out duration-500\n            ${open ? \"translate-x-0 w-sidebar\" : \"-translate-x-[18rem] w-0\"}`}>\n        {opt[content]}\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;"],"mappings":"AAAA;AAEA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OACEC,UAAU,CACVC,YAAY,CACZC,aAAa,KAER,uBAAuB,CAE9B;AACA;AACA;AACA;AACA;AACA,GALA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMA,QAAS,CAAAC,OAAOA,CAAA,CAAI,CAElB;AACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,MAAM,CAAC,CAE9C;AACA,KAAM,CAAAe,aAAa,CAAIC,KAAK,EAAK,CAC/B,GAAIH,OAAO,GAAKG,KAAK,CAAE,CACrBJ,OAAO,CAAC,CAACD,IAAI,CAAC,CAChB,CAAC,IAAM,CACLG,UAAU,CAACE,KAAK,CAAC,CACjB,GAAI,CAACL,IAAI,CAAE,CACTC,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAK,GAAG,CAAG,CACVC,IAAI,cAAGX,IAAA,CAACN,QAAQ,GAAE,CAAC,CACnBkB,OAAO,cAAEZ,IAAA,CAACL,YAAY,GAAE,CAC1B,CAAC,CAED,mBACEO,KAAA,QAAKW,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC3CZ,KAAA,QAAKW,SAAS,CAAC,+DACc,CAAAC,QAAA,EAG1BV,IAAI,cACHJ,IAAA,CAACH,YAAY,EACXkB,KAAK,CAAE,OAAQ,CACfF,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAEA,CAAA,GAAMX,OAAO,CAAC,CAACD,IAAI,CAAE,CAC/B,CAAC,cAEFJ,IAAA,CAACF,aAAa,EACZiB,KAAK,CAAE,MAAO,CACdF,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAEA,CAAA,GAAMX,OAAO,CAAC,CAACD,IAAI,CAAE,CAC/B,CACF,cAGDJ,IAAA,CAACJ,UAAU,EACTmB,KAAK,CAAE,qBAAsB,CAC7BC,OAAO,CAAEA,CAAA,GAAMR,aAAa,CAAC,MAAM,CAAE,CACrCK,SAAS,CAAC,cAAc,CACzB,CAAC,EACC,CAAC,cAGNb,IAAA,QAAKa,SAAS,CAAE;AACtB,cAAcT,IAAI,CAAG,yBAAyB,CAAG,0BAA0B,EAAG,CAAAU,QAAA,CACrEJ,GAAG,CAACJ,OAAO,CAAC,CACV,CAAC,EACH,CAAC,CAEV,CAAC,CACD,cAAe,CAAAH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}