{"ast":null,"code":"// Import dependencies, declarations and components\nimport TaskPreview from'../TaskPreview/TaskPreview';import{useContext}from'react';import{TaskContext}from'../../TaskContext';import logo from'../images/logo.svg';/**\n * Component to render preview of archived tasks in app sidebar.\n * @returns {JSX.Element} - The rendered sidebar component.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ArchivedList(){// Import global context\nconst{tasks,channels}=useContext(TaskContext);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-col w-sidebar h-full bg-bg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"img\",{className:\"m-md mb-md w-logo\",src:logo,alt:\"Logo\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"m-md p-xs mt-0 overflow-y-auto\",style:{scrollbarWidth:'none'},children:tasks.map(task=>{var _task$archived;return Number((_task$archived=task.archived)!==null&&_task$archived!==void 0?_task$archived:0)?/*#__PURE__*/_jsx(TaskPreview,{task:task,subtasks:[],channel:channels.find(channel=>task.channelID===channel.channelID)}):null;})})]});};export default ArchivedList;","map":{"version":3,"names":["TaskPreview","useContext","TaskContext","logo","jsx","_jsx","jsxs","_jsxs","ArchivedList","tasks","channels","className","children","src","alt","style","scrollbarWidth","map","task","_task$archived","Number","archived","subtasks","channel","find","channelID"],"sources":["/Users/jasmineburt/Documents/projects/projects/pixel/src/components/Sidebar/ArchivedList.js"],"sourcesContent":["// Import dependencies, declarations and components\n\nimport TaskPreview from '../TaskPreview/TaskPreview';\nimport { useContext } from 'react';\nimport { TaskContext } from '../../TaskContext';\nimport logo from '../images/logo.svg'\n\n/**\n * Component to render preview of archived tasks in app sidebar.\n * @returns {JSX.Element} - The rendered sidebar component.\n */\nfunction ArchivedList () {\n    // Import global context\n    const { tasks, channels } = useContext(TaskContext);\n\n    return (\n        <div className=\"flex-col w-sidebar h-full bg-bg\">\n            {/* render logo in sidebar */}\n            <div className=\"flex justify-center items-center\">\n                <img\n                    className=\"m-md mb-md w-logo\"\n                    src={logo}\n                    alt=\"Logo\"\n                />\n            </div>\n\n            {/** Render preview of archived tasks in sidebar */}\n            <div className=\"m-md p-xs mt-0 overflow-y-auto\" style={{scrollbarWidth: 'none'}}>\n                    {tasks.map((task) => (\n                        Number(task.archived ?? 0) ? (\n                            <TaskPreview\n                                task={task}\n                                subtasks={[]}\n                                channel={channels.find((channel) => (\n                                    task.channelID === channel.channelID\n                                ))} \n                            />\n                        ) : null\n                    ))}\n            </div>\n        </div>\n    );\n};\nexport default ArchivedList;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,WAAW,KAAM,4BAA4B,CACpD,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,mBAAmB,CAC/C,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CAErC;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,YAAYA,CAAA,CAAI,CACrB;AACA,KAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGT,UAAU,CAACC,WAAW,CAAC,CAEnD,mBACIK,KAAA,QAAKI,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAE5CP,IAAA,QAAKM,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAC7CP,IAAA,QACIM,SAAS,CAAC,mBAAmB,CAC7BE,GAAG,CAAEV,IAAK,CACVW,GAAG,CAAC,MAAM,CACb,CAAC,CACD,CAAC,cAGNT,IAAA,QAAKM,SAAS,CAAC,gCAAgC,CAACI,KAAK,CAAE,CAACC,cAAc,CAAE,MAAM,CAAE,CAAAJ,QAAA,CACvEH,KAAK,CAACQ,GAAG,CAAEC,IAAI,OAAAC,cAAA,OACZ,CAAAC,MAAM,EAAAD,cAAA,CAACD,IAAI,CAACG,QAAQ,UAAAF,cAAA,UAAAA,cAAA,CAAI,CAAC,CAAC,cACtBd,IAAA,CAACL,WAAW,EACRkB,IAAI,CAAEA,IAAK,CACXI,QAAQ,CAAE,EAAG,CACbC,OAAO,CAAEb,QAAQ,CAACc,IAAI,CAAED,OAAO,EAC3BL,IAAI,CAACO,SAAS,GAAKF,OAAO,CAACE,SAC9B,CAAE,CACN,CAAC,CACF,IAAI,EACX,CAAC,CACL,CAAC,EACL,CAAC,CAEd,CAAC,CACD,cAAe,CAAAjB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}