{"ast":null,"code":"import React from'react';import{Checkbox,Button}from'antd';import{Cross1Icon}from'@radix-ui/react-icons';import*as Dialog from\"@radix-ui/react-dialog\";import TextArea from'antd/es/input/TextArea';// Assuming you're using Ant Design's TextArea\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InputTaskHeader=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{title,setTask,task}=_ref;const inputRef=ref;const handleFocus=()=>{const input=inputRef.current;input.focus({cursor:'end'});};const toggleStatus=()=>{setTask(_task=>({..._task,completed:_task.completed?0:1}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row items-center\",children:[/*#__PURE__*/_jsx(Checkbox,{tabIndex:\"-1\",checked:task.completed,onChange:toggleStatus,className:\"pb-sm border-accent\"}),/*#__PURE__*/_jsx(TextArea,{ref:inputRef,onFocus:handleFocus,size:\"large\",onChange:e=>{setTask(_task=>({..._task,title:e.target.value}));},value:title,placeholder:\"Task name...\",spellcheck:\"false\",className:`border-none focus:shadow-none bg-transparent text-lg font-heavy\n                    p-none mr-lg ml-md text-${task.completed?\"sub\":\"h1\"}`,autoSize:true}),/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,tabIndex:\"-1\",children:/*#__PURE__*/_jsx(Button,{tabIndex:\"-1\",type:\"text\",\"aria-label\":\"Close\",className:\"text-accent hover:scale-110 hover:text-primary\",children:/*#__PURE__*/_jsx(Cross1Icon,{})})})]});});export default InputTaskHeader;","map":{"version":3,"names":["React","Checkbox","Button","Cross1Icon","Dialog","TextArea","jsx","_jsx","jsxs","_jsxs","InputTaskHeader","forwardRef","_ref","ref","title","setTask","task","inputRef","handleFocus","input","current","focus","cursor","toggleStatus","_task","completed","className","children","tabIndex","checked","onChange","onFocus","size","e","target","value","placeholder","spellcheck","autoSize","Close","asChild","type"],"sources":["/Users/jasmineburt/Documents/projects/projects/pixel/src/components/Dialogs/TaskDialog/InputTaskHeader.js"],"sourcesContent":["import React from 'react';\nimport { Checkbox, Button } from 'antd';\nimport { Cross1Icon } from '@radix-ui/react-icons';\nimport * as Dialog from \"@radix-ui/react-dialog\";\nimport TextArea from 'antd/es/input/TextArea'; // Assuming you're using Ant Design's TextArea\n\nconst InputTaskHeader = React.forwardRef(({ title, setTask, task }, ref) => {\n    const inputRef = ref;\n\n    const handleFocus = () => {\n        const input = inputRef.current;\n        input.focus({ cursor: 'end' });\n    };\n\n    const toggleStatus = () => {\n        setTask((_task) => ({\n            ..._task,\n            completed: _task.completed ? 0 : 1,\n        }));\n    };\n\n    return (\n        <div className=\"flex flex-row items-center\">\n            <Checkbox\n                tabIndex=\"-1\"\n                checked={task.completed}\n                onChange={toggleStatus}\n                className=\"pb-sm border-accent\"\n            />\n            <TextArea\n                ref={inputRef}\n                onFocus={handleFocus}\n                size=\"large\"\n                onChange={(e) => {\n                    setTask((_task) => ({\n                        ..._task,\n                        title: e.target.value,\n                    }));\n                }}\n                value={title}\n                placeholder={\"Task name...\"}\n                spellcheck=\"false\"\n                className={`border-none focus:shadow-none bg-transparent text-lg font-heavy\n                    p-none mr-lg ml-md text-${task.completed ? \"sub\" : \"h1\"}`}\n                autoSize \n            />\n            <Dialog.Close asChild tabIndex=\"-1\">\n                <Button\n                    tabIndex=\"-1\"\n                    type=\"text\"\n                    aria-label=\"Close\"\n                    className=\"text-accent hover:scale-110 hover:text-primary\">\n                        <Cross1Icon />\n                </Button>\n            </Dialog.Close>\n        </div>\n    );\n});\n\nexport default InputTaskHeader;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,MAAM,CACvC,OAASC,UAAU,KAAQ,uBAAuB,CAClD,MAAO,GAAK,CAAAC,MAAM,KAAM,wBAAwB,CAChD,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,eAAe,cAAGV,KAAK,CAACW,UAAU,CAAC,CAAAC,IAAA,CAA2BC,GAAG,GAAK,IAAlC,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAAJ,IAAA,CAC9D,KAAM,CAAAK,QAAQ,CAAGJ,GAAG,CAEpB,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,KAAK,CAAGF,QAAQ,CAACG,OAAO,CAC9BD,KAAK,CAACE,KAAK,CAAC,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CAClC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvBR,OAAO,CAAES,KAAK,GAAM,CAChB,GAAGA,KAAK,CACRC,SAAS,CAAED,KAAK,CAACC,SAAS,CAAG,CAAC,CAAG,CACrC,CAAC,CAAC,CAAC,CACP,CAAC,CAED,mBACIhB,KAAA,QAAKiB,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACvCpB,IAAA,CAACN,QAAQ,EACL2B,QAAQ,CAAC,IAAI,CACbC,OAAO,CAAEb,IAAI,CAACS,SAAU,CACxBK,QAAQ,CAAEP,YAAa,CACvBG,SAAS,CAAC,qBAAqB,CAClC,CAAC,cACFnB,IAAA,CAACF,QAAQ,EACLQ,GAAG,CAAEI,QAAS,CACdc,OAAO,CAAEb,WAAY,CACrBc,IAAI,CAAC,OAAO,CACZF,QAAQ,CAAGG,CAAC,EAAK,CACblB,OAAO,CAAES,KAAK,GAAM,CAChB,GAAGA,KAAK,CACRV,KAAK,CAAEmB,CAAC,CAACC,MAAM,CAACC,KACpB,CAAC,CAAC,CAAC,CACP,CAAE,CACFA,KAAK,CAAErB,KAAM,CACbsB,WAAW,CAAE,cAAe,CAC5BC,UAAU,CAAC,OAAO,CAClBX,SAAS,CAAE;AAC3B,8CAA8CV,IAAI,CAACS,SAAS,CAAG,KAAK,CAAG,IAAI,EAAG,CAC9Da,QAAQ,MACX,CAAC,cACF/B,IAAA,CAACH,MAAM,CAACmC,KAAK,EAACC,OAAO,MAACZ,QAAQ,CAAC,IAAI,CAAAD,QAAA,cAC/BpB,IAAA,CAACL,MAAM,EACH0B,QAAQ,CAAC,IAAI,CACba,IAAI,CAAC,MAAM,CACX,aAAW,OAAO,CAClBf,SAAS,CAAC,gDAAgD,CAAAC,QAAA,cACtDpB,IAAA,CAACJ,UAAU,GAAE,CAAC,CACd,CAAC,CACC,CAAC,EACd,CAAC,CAEd,CAAC,CAAC,CAEF,cAAe,CAAAO,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}